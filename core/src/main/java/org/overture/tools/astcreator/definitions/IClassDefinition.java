package org.overture.tools.astcreator.definitions;

import java.util.List;
import java.util.Set;

import org.overture.tools.astcreator.AstCreatorException;
import org.overture.tools.astcreator.ToStringAddOn;
import org.overture.tools.astcreator.env.Environment;
import org.overture.tools.astcreator.java.definitions.JavaName;

public interface IClassDefinition extends IInterfaceDefinition
{
	Set<IInterfaceDefinition> getInterfaces();

	JavaName getName();
	
	void setName(JavaName newName);

	List<Field> getFields();

	boolean hasSuper();

	void setSuper(IClassDefinition newSuper);

	IClassDefinition getSuperDef();

	void addField(Field field);

	boolean hasField(String name, Environment env);

	boolean refinesField(String name, Environment env);

	public boolean isRefinedField(Field field, Environment env);

	public List<Field> getInheritedFields();

	public void checkFieldTypeHierarchy(Environment e)
			throws AstCreatorException;

	public enum ClassType
	{
		Production, Alternative, Token, Custom, Unknown, SubProduction
	}

	final static String classHeader = "/* This file was generated by ASTcreator (http://www.lausdahl.com/). */";

	void addToStringAddOn(ToStringAddOn addon);

	List<ToStringAddOn> getToStringAddOns();

	public void addInterface(IInterfaceDefinition intf);

	public String getAstPackage();

	public void setIsBaseTree(boolean b);

	public boolean isBaseTree();
}
