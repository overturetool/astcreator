Tokens


Abstract Syntax Tree
/* This section declares the AST by giving root nodes and their possible sub classes
 *
 * exp {-> package='org.overture.ast.expressions'}
 *      = {subclass1} [field_name]:field_type_must_either_be_root_or_token ...
 *      ;
 *
 */

exp {-> package='org.overture.ast.expressions'}
    =   {special} [type]:zz//type.int
    //|   {testexpp} [tt]:tok
 //   |   {kenneth} [ff]:exp** (graf):exp (glist):exp* (glistlist):exp** 

    ;

    
type
    =   {real} [token]:real
    |   {int} [token]:int
    |   {bool} [token]:bool
    ;
    
kl
    = {zz}
    ;

Aspect Declaration
/* This section allows fields of root types to be declared e.g. exp*/
%exp = [type]:type //[tokenLL]:location
    ;
    
//%exp->#dd = [kkkk]:type;

//%exp->#dd->#kk = [lll]:type;